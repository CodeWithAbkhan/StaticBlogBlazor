@inject BlogService blogService
@using StaticBlog3.Models
<div class="position-sticky" style="top: 2rem;" data-enhance-nav="false">
    <div class="p-4 mb-3 bg-body-tertiary rounded">
        <h3 class="fst-italic">About</h3>
        <p class="mb-0">"Our natural plants blog is a treasure trove of knowledge for plant enthusiasts, gardeners, and anyone interested in the beauty and significance of the natural world. We invite you to explore, learn, and connect with the amazing world of plants through our informative and engaging content.</p>
    </div>
    @if(popularBlogPosts == null){
     <p><em>Loading...</em></p>
    }else {
    <div>
        <h4 class="fst-italic">Popular posts</h4>
        @if (popularBlogPosts is not null)
        {
            <ul class="list-unstyled" >
                @foreach (var post in popularBlogPosts)
                {
                    <li>
                        <a class="d-flex flex-column flex-lg-row gap-3 align-items-start align-items-lg-center py-3 link-body-emphasis text-decoration-none border-top"
                               href="/@(post.Slug)" data-enhance-nav="false">
                            <img src="@(post.FeaturedImage)"
                                 style="  object-fit: cover; background-repeat:no-repeat;background-position:center;"
                                 class=" border-none rounded"
                                 width="100" height="100" alt="@post.Description" loading="lazy">
                            <div class="col-lg-8 ">
                                <h4 class="mb-2 h5">@post.Title</h4>
                                <div class="col flex-row d-flex justify-content-between align-items-center ">
                                 <small class="text-body-secondary">@post.Date.ToString("MMM d, yyyy")</small>
                                    <p class="mb-0 text-muted"><img src="icons/eye.svg" width="15" height="15" alt="views" /> @post.Views</p>
                                </div>
                            </div>
                        </a>
                    </li>
                }
            </ul>
        }
        else
        {
            <div>Loading...</div>
        }
    </div>
    }
</div>

@code {
    [Parameter]
    public List<BlogPost>? BlogPosts { get; set; }
    List<BlogPost> popularBlogPosts;

    protected override async Task OnInitializedAsync()
    {
        if (BlogPosts == null) // Load data only once
        {
            var allBlogPosts = blogService.GetBlogPosts().ToList(); // Load data asynchronously
            if(popularBlogPosts ==null){
                popularBlogPosts = allBlogPosts.OrderByDescending(post => post.Views).Take(6).ToList();
            }
        }
        else
        {
            popularBlogPosts = BlogPosts.OrderByDescending(post => post.Views).Take(6).ToList();
        }
    }

}
