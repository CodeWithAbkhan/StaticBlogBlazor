@page "/blogs/{page:int?}"
@using System.Text.Json
@using StaticBlog3.Models
@inject IJSRuntime jsRuntime
@inject BlogService BlogService

<h1>Blog Posts</h1>
@if(displayedBlogPosts == null)
{
 <p><em>Loading...</em></p>
}
else{
    <div class="container">
       <div class="row">
        <div class="col-md-8">
            <div class="row">
            @foreach (var post in displayedBlogPosts)
            {
            <BlogCard post="post" />
            }
            </div>
            @if (totalPages > 1)
            {
                <nav aria-label="Blog Posts Pagination">
                    <ul class="pagination">
                        @if (currentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="/blogs/@(currentPage - 1)">Previous</a>
                            </li>
                        }

                        @for (int page = 1; page <= totalPages; page++)
                        {

                            <li class="page-item @(currentPage == page ? "active" : "")">
                                <a class="page-link" href="/blogs/@(page)">@(page)</a>
                            </li>
                        }

                        @if (currentPage < totalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="/blogs/@(currentPage + 1)">Next</a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        </div>
       <div class="col-12 col-md-4">
            <Sidebar  BlogPosts=@allBlogPosts/>
        </div>
    </div>
</div>
}
@code {
    private List<BlogPost> allBlogPosts;
    private List<BlogPost> displayedBlogPosts;
    private int pageSize = 5;
    private int currentPage = 1;
    private int totalPages => (int)Math.Ceiling(allBlogPosts.Count / (double)pageSize);
    [Parameter] public int Page { get; set; } = 1;

    protected override void OnParametersSet()
    {
        if (Page >= 1 && Page <= totalPages)
        {
            currentPage = Page;
        }
        else
        {
            currentPage = 1;
        }

        UpdateDisplayedPosts();
    }

    protected override void OnInitialized()
    {
        allBlogPosts = BlogService.GetBlogPosts().ToList();
        UpdateDisplayedPosts();
    }

    private void UpdateDisplayedPosts()
    {
        displayedBlogPosts = allBlogPosts.Skip((currentPage - 1) * pageSize).Take(pageSize).ToList();
    }
}

