@page "/{Slug}"

@using StaticBlog3.Models

@inject BlogService BlogService
@inject IJSRuntime _jsRuntime




@if(blogPost == null)
{
    <p><em>Loading...</em></p>
}
else{
    
<div class="container">
       <div class="row">
         @if (blogPost.FeaturedImage != null)
        {
            <div class="d-flex justify-content-center">
                <img src="@blogPost.FeaturedImage" class="rounded  my-2" alt="Blog Post Image" loading="lazy" style="height: 350px; width: 100%; object-fit: cover;">
            </div>
        }
        else
        {
            <div class="d-flex justify-content-center">
                <img src="https://placehold.co/760x350" class="rounded  my-2" alt="Blog Post Image" loading="lazy" style="height: 350px; width: 100%; object-fit: cover;">
            </div>
        }
        <br />
        <ul class="breadcrumb">
            <li class="breadcrumb-item"><NavLink href="/">Home </NavLink></li>
            @if (blogPost == null)
            {
               <p>Loading...</p>
            }
            else
            {
               <li class="breadcrumb-item"><a href="/@blogPost.Slug">@blogPost.Title</a></li>
            }
        </ul>

        <div class="col-md-8">
            @if (blogPost != null)
            {

            <h1 class="mb-2">@blogPost.Title</h1>
                <div class="row d-flex justify-content-center align-items-center">
                    <div class="col d-flex flex-row text-center align-items-center gap-2">
                        @if (blogPost.AuthorImg is null)
                        {
                            <img src="icons/person.svg" alt="@blogPost.Author" class="rounded-circle" width="40" height="40" />
                        }
                        else
                        {
                            <img src="@blogPost.AuthorImg" alt="@blogPost.Author" class="rounded-circle" width="40" height="40" />
                        }
                        <p class="mb-0 text-center text-muted">@blogPost.Author</p>
                    </div>

                    <div class="col text-center separator">
                        <p class="mb-0 text-muted"><img src="icons/calendar.svg" /> @blogPost.Date.ToString("MMMM d, yyyy")</p>
                    </div>

                    <div class="col text-center separator">
                        <p class="mb-0 text-muted"><img src="icons/eye.svg" alt="views" /> @blogPost.Views</p>
                    </div>
                </div>
                <div >
                    @((MarkupString)blogPost.Content) </div>
            }
            else
            {
                <p>Blog post not found.</p>
            }
        </div>
     <div class="col-12 col-md-4">
        <Sidebar />
     </div>
    </div>
</div>

}
@code {
    private BlogPost blogPost;

    [Parameter] public string Slug { get; set; }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await _jsRuntime.InvokeVoidAsync("hljs.highlightAll");
        }
    }
    protected override void OnInitialized()
    {
        blogPost = BlogService.GetBlogPostBySlug(Slug);
        if (blogPost != null)
        {
            // Call the UpdateViewCount method to increment the view count
            BlogService.UpdateViewCount(Slug);
        }
    }
}
